@page "/ProdutosCRUD"
@using BlazorCRUD.Shared.Models
@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@inherits LayoutComponentBase

<div class="container py-5">
    <div class="col-lg-8 mx-auto">
        <h3 class="text-center text-light mb-4">Cadastro de Produtos</h3>

        <!-- Formulário para adicionar novo produto -->
        <EditForm Model="@produto" OnValidSubmit="AdicionarProduto">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="nome" class="form-label text-white">Nome do Produto</label>
                <InputText id="nome" class="form-control" @bind-Value="produto.Nome" placeholder="Digite o nome do produto" />
            </div>

            <div class="mb-3">
                <label for="preco" class="form-label text-white">Preço</label>
                <InputNumber id="preco" class="form-control" @bind-Value="produto.Preco" min="0" />
            </div>

            <div class="mb-3">
                <label for="quantidade" class="form-label text-white">Quantidade</label>
                <InputNumber id="quantidade" class="form-control" @bind-Value="produto.Quantidade" min="1" />
            </div>

            <div class="mb-3">
                <label for="imagem" class="form-label text-white">Imagem URL</label>
                <InputText id="imagem" class="form-control" @bind-Value="produto.Imagem" placeholder="Digite a URL da imagem" />
            </div>

            <button type="submit" class="btn btn-success">
                <i class="bi bi-plus me-2"></i>Adicionar Produto
            </button>
        </EditForm>

        <hr class="my-4 text-white" />

        <!-- Lista de Produtos -->
        <h4 class="text-light mb-3">Produtos Cadastrados</h4>

        <div class="card bg-dark text-light shadow-sm">
            <div class="card-body">
                <table class="table table-striped table-dark">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>Preço</th>
                            <th>Quantidade</th>
                            <th>Imagem</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (produtos != null && produtos.Any())
                        {
                            @foreach (var produto in produtos)
                            {
                                <tr>
                                    <td>@produto.Nome</td>
                                    <td>@produto.Preco.ToString("C2")</td>
                                    <td>@produto.Quantidade</td>
                                    <td>
                                        <img src="@produto.Imagem" alt="@produto.Nome" class="img-thumbnail" width="50" height="50" />
                                    </td>
                                    <td>
                                        <!-- Ícones de Editar e Excluir -->
                                        <a href="@($"/EditarProduto/{produto.Id}")" class="btn btn-warning btn-sm">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                        <a href="@($"/ExcluirProduto/{produto.Id}")" class="btn btn-danger btn-sm ms-2">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center">Nenhum produto cadastrado.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code {
    private Produto produto = new Produto(); // Produto para adicionar
    private List<Produto> produtos = new List<Produto>(); // Lista de produtos

    // Carrega os produtos ao inicializar a página
    protected override void OnInitialized()
    {
        // Carrega os produtos do "banco" simulado (Banco.Produtos)
        produtos = Banco.Produtos.ToList();
    }

    // Método para adicionar um novo produto
    private void AdicionarProduto()
    {
        produto.Id = Banco.Produtos.Max(p => p.Id) + 1; // Incrementa o ID
        Banco.Produtos.Add(produto); // Adiciona o produto no "banco"
        produtos.Add(produto); // Adiciona na lista local
        produto = new Produto(); // Limpa o formulário

        // Redireciona para a lista de produtos
        NavigationManager.NavigateTo("/ProdutosCRUD");
    }
}
